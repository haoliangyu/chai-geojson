"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}function isPoint$1(t,e){e=e||{};var o=e.coordinates?e.coordinates:t._obj.coordinates,i=e.negativeMsg?e.negativeMsg:"Expect coordinates not to be valid point coordinates",n=e.positiveMsg?e.positiveMsg:"Expect ["+o+"] to be valid point coordinates";t.assert(2===o.length&&"number"==typeof o[0]&&!Number.isNaN(o[0])&&"number"==typeof o[1]&&!Number.isNaN(o[1]),n,i)}function isLineString$1(t,e){e=e||{};var o=e.negativeMsg?e.negativeMsg:"Expect coordinates not to be valid linestring coordinates",i=e.coordinates?e.coordinates:t._obj.coordinates;t.assert(i.length>1,e.positiveMsg?e.positiveMsg:"Expect coordinates to have at least two points",o),i.forEach(function(e){isPoint$1(t,{coordinates:e,negativeMsg:o})})}function isPolygon$1(t,e){e=e||{};var o=e.negativeMsg?e.negativeMsg:"Expect coordinates not to be valid polygon coordinates",i=e.coordinates?e.coordinates:t._obj.coordinates;t.assert(i.length>0,e.positiveMsg?e.positiveMsg:"Expect coordinates to have at least one ring",o),i.forEach(function(e,i){isLineString$1(t,{coordinates:e,positiveMsg:"Expect ring "+(i+1)+" to be valid linestring coordinates",negativeMsg:o})})}function getTypeAssertFunction(t){return typeAssertFunction[t]}function isFeatureCollection(t){t.assert("FeatureCollection"===t._obj.type&&Array.isArray(t._obj.features),"expected #{this} to be a FeatureCollection","expected #{this} to not be a FeatureCollection")}function isFeature(t){t.assert("Feature"===t._obj.type&&"object"===_typeof(t._obj.geometry)&&"object"===_typeof(t._obj.properties),"expected #{this} to be a Feature","expected #{this} to not be a Feature")}function isGeometry(t){var e=t._obj.type,o=getTypeAssertFunction(e);o(t)}function isPoint$$1(t){var e="expected #{this} to be a Point",o="expected #{this} to not be a Point";t.assert("Point"===t._obj.type&&Array.isArray(t._obj.coordinates),e,o),isPoint$1(t)}function isLineString$$1(t){var e="expected #{this} to be a LineString",o="expected #{this} to not be a LineString";t.assert("LineString"===t._obj.type&&Array.isArray(t._obj.coordinates),e,o),isLineString$1(t)}function isPolygon$$1(t){var e="expected #{this} to be a Polygon",o="expected #{this} to not be a Polygon";t.assert("Polygon"===t._obj.type&&Array.isArray(t._obj.coordinates),e,o),isPolygon$1(t)}function isMultiPoint(t){var e="expected #{this} to be a MultiPoint",o="expected #{this} to not be a MultiPoint";t.assert("MultiPoint"===t._obj.type&&Array.isArray(t._obj.coordinates),e,o),t._obj.coordinates.forEach(function(e,o){isPoint$1(t,{coordinates:e,positiveMsg:"Expect point "+(o+1)+" to be valid point coordinates"})})}function isMultiLineString(t){var e="expected #{this} to be a MultiLineString",o="expected #{this} to not be a MultiLineString";t.assert("MultiLineString"===t._obj.type&&Array.isArray(t._obj.coordinates),e,o),t._obj.coordinates.forEach(function(e,o){isLineString$1(t,{coordinates:e,positiveMsg:"Expect linestring "+(o+1)+" to be valid linestring coordinates"})})}function isMultiPolygin(t){var e="expected #{this} to be a MultiPolygon",o="expected #{this} to not be a MultiPolygon";t.assert("MultiPolygon"===t._obj.type&&Array.isArray(t._obj.coordinates),e,o),t._obj.coordinates.forEach(function(e,o){isPolygon$1(t,{coordinates:e,positiveMsg:"Expect polygon "+(o+1)+" to be valid polygon coordinates"})})}function areaEqual(t,e,o){var i=area(t._obj),n=e*o;t.assert(e-n<=i&&i<=e+n,"expected area "+i+" m^2 to euqal "+e+" m^2 with "+o+" percision","expected area "+i+" m^2 not to euqal "+e+" m^2 with "+o+" percision")}function areaAbove(t,e){var o=area(t._obj);t.assert(o>e,"expected area "+o+" m^2 to be above "+e+" m^2","expected area "+o+" m^2 not to be above "+e+" m^2")}function areaAtLeast(t,e){var o=area(t._obj);t.assert(o>=e,"expected area "+o+" m^2 to be at least "+e+" m^2","expected area "+o+" m^2 not to be at least "+e+" m^2")}function areaBelow(t,e){var o=area(t._obj);t.assert(o<e,"expected area "+o+" m^2 to be below "+e+" m^2","expected area "+o+" m^2 not to be below "+e+" m^2")}function areaAtMost(t,e){var o=area(t._obj);t.assert(o<=e,"expected area "+o+" m^2 to be at most "+e+" m^2","expected area "+o+" m^2 not to be at most "+e+" m^2")}function areaWithin(t,e,o){var i=area(t._obj);t.assert(e<=i&&i<=o,"expected area "+i+" m^2 to be within "+e+" and "+o+" m^2","expected area "+i+" m^2 not to be within "+e+" and "+o+" m^2")}function lengthEqual(t,e,o){var i=1e3*lineDistance(t._obj),n=e*o;t.assert(e-n<=i&&i<=e+n,"expected length "+i+" m to euqal "+e+" m with "+o+" percision","expected length "+i+" m not to euqal "+e+" m with "+o+" percision")}function lengthAbove(t,e){var o=1e3*lineDistance(t._obj);t.assert(o>e,"expected length "+o+" m to be above "+e+" m","expected length "+o+" m not to be above "+e+" m")}function lengthAtLeast(t,e){var o=1e3*lineDistance(t._obj);t.assert(o>=e,"expected length "+o+" m to be at least "+e+" m","expected length "+o+" m not to be at least "+e+" m")}function lengthBelow(t,e){var o=1e3*lineDistance(t._obj);t.assert(o<e,"expected length "+o+" m to be below "+e+" m","expected length "+o+" m not to be below "+e+" m")}function lengthAtMost(t,e){var o=1e3*lineDistance(t._obj);t.assert(o<=e,"expected length "+o+" m to be at most "+e+" m","expected length "+o+" m not to be at most "+e+" m")}function lengthWithin(t,e,o){var i=1e3*lineDistance(t._obj);t.assert(e<=i&&i<=o,"expected length "+i+" m to be within "+e+" and "+o+" m","expected length "+i+" m not to be within "+e+" and "+o+" m")}function feature(t){return{type:"Feature",geometry:t}}var area=_interopDefault(require("@turf/area")),lineDistance=_interopDefault(require("@turf/line-distance")),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},get=function t(e,o,i){null===e&&(e=Function.prototype);var n=Object.getOwnPropertyDescriptor(e,o);if(void 0===n){var a=Object.getPrototypeOf(e);return null===a?void 0:t(a,o,i)}if("value"in n)return n.value;var r=n.get;if(void 0!==r)return r.call(i)},set=function t(e,o,i,n){var a=Object.getOwnPropertyDescriptor(e,o);if(void 0===a){var r=Object.getPrototypeOf(e);null!==r&&t(r,o,i,n)}else if("value"in a&&a.writable)a.value=i;else{var s=a.set;void 0!==s&&s.call(n,i)}return i},typeAssertFunction={FeatureCollection:isFeatureCollection,Feature:isFeature,Geometry:isGeometry,Point:isPoint$$1,LineString:isLineString$$1,Polygon:isPolygon$$1,MultiPoint:isMultiPoint,MultiLineString:isMultiLineString,MultiPolygon:isMultiPolygin},index=function(t,e){var o=t.Assertion;o.overwriteChainableMethod("a",function(t){return function(e){var i=getTypeAssertFunction(e);i?(new o(this._obj).to.have.property("type").a("string"),i(this)):t.apply(this,arguments)}},function(t){return function(){t.apply(this,arguments)}}),o.addChainableMethod("area",function(t,e){new o(t).to.be.a("Number").at.least(0),e=e||0,new o(e).to.be.a("Number").within(0,1),new o(this._obj).to.have.property("type").a("string"),"Feature"!==this._obj.type&&"FeatureCollection"!==this._obj.type&&(this._obj=feature(this._obj)),areaEqual(this,t,e)},function(){this.geomArea=!0}),o.addMethod("areaOf",function(t,e){new o(t).to.be.a("Number").at.least(0),e=e||0,new o(e).to.be.a("Number").within(0,1),new o(this._obj).to.have.property("type").a("string"),"Feature"!==this._obj.type&&"FeatureCollection"!==this._obj.type&&(this._obj=feature(this._obj)),areaEqual(this,t,e)}),o.overwriteChainableMethod("length",function(t){return function(e,i){"length"in this._obj?t.apply(this,arguments):(new o(e).to.be.a("Number").at.least(0),i=i||0,new o(i).to.be.a("Number").within(0,1),new o(this._obj).to.have.property("type").a("string"),"Feature"!==this._obj.type&&"FeatureCollection"!==this._obj.type&&(this._obj=feature(this._obj)),lengthEqual(this,e,i))}},function(){return function(){this.geomLength=!0}}),o.overwriteMethod("lengthOf",function(t){return function(e,i){"length"in this._obj?t.apply(this,arguments):(new o(e).to.be.a("Number").at.least(0),i=i||0,new o(i).to.be.a("Number").within(0,1),new o(this._obj).to.have.property("type").a("string"),"Feature"!==this._obj.type&&"FeatureCollection"!==this._obj.type&&(this._obj=feature(this._obj)),lengthEqual(this,e,i))}}),o.overwriteMethod("above",function(t){return function(e){this.geomArea||this.geomLength?(new o(e).to.be.a("Number").at.least(0),new o(this._obj).to.have.property("type").a("string"),"Feature"!==this._obj.type&&"FeatureCollection"!==this._obj.type&&(this._obj=feature(this._obj)),this.geomArea?areaAbove(this,e):lengthAbove(this,e)):t.apply(this,arguments)}}),o.overwriteMethod("least",function(t){return function(e){this.geomArea||this.geomLength?(new o(e).to.be.a("Number").at.least(0),new o(this._obj).to.have.property("type").a("string"),"Feature"!==this._obj.type&&"FeatureCollection"!==this._obj.type&&(this._obj=feature(this._obj)),this.geomArea?areaAtLeast(this,e):lengthAtLeast(this,e)):t.apply(this,arguments)}}),o.overwriteMethod("below",function(t){return function(e){this.geomArea||this.geomLength?(new o(e).to.be.a("Number").at.least(0),new o(this._obj).to.have.property("type").a("string"),"Feature"!==this._obj.type&&"FeatureCollection"!==this._obj.type&&(this._obj=feature(this._obj)),this.geomArea?areaBelow(this,e):lengthBelow(this,e)):t.apply(this,arguments)}}),o.overwriteMethod("most",function(t){return function(e){this.geomArea||this.geomLength?(new o(e).to.be.a("Number").at.least(0),new o(this._obj).to.have.property("type").a("string"),"Feature"!==this._obj.type&&"FeatureCollection"!==this._obj.type&&(this._obj=feature(this._obj)),this.geomArea?areaAtMost(this,e):lengthAtMost(this,e)):t.apply(this,arguments)}}),o.overwriteMethod("within",function(t){return function(e,i){this.geomArea||this.geomLength?(new o(e).to.be.a("Number").at.least(0),new o(i).to.be.a("Number").at.least(i),new o(this._obj).to.have.property("type").a("string"),"Feature"!==this._obj.type&&"FeatureCollection"!==this._obj.type&&(this._obj=feature(this._obj)),this.geomArea?areaWithin(this,e,i):lengthWithin(this,e,i)):t.apply(this,arguments)}})};module.exports=index;